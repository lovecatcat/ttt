{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ret",
				"return"
			],
			[
				"ass",
				"assu_nation"
			],
			[
				"assu",
				"assu_nation"
			],
			[
				"getA",
				"getAge"
			],
			[
				"agr",
				"agreement"
			],
			[
				"route",
				"router"
			],
			[
				"fr",
				"from"
			],
			[
				"imp",
				"import"
			],
			[
				"crea",
				"created"
			],
			[
				"doc",
				"document_type"
			],
			[
				"inde",
				"indexOf"
			],
			[
				"war",
				"warranty"
			],
			[
				"toa",
				"toast"
			],
			[
				"appl",
				"appl_card_type"
			],
			[
				"in",
				"index"
			],
			[
				"typ",
				"typeChange"
			],
			[
				"re",
				"rels"
			],
			[
				"pu",
				"pushData"
			],
			[
				"an",
				"annual_source"
			],
			[
				"na",
				"nationality"
			],
			[
				"do",
				"document_type"
			],
			[
				"next",
				"nextTick"
			],
			[
				"as",
				"assured"
			],
			[
				"php",
				"phpinfo"
			],
			[
				"ci",
				"city"
			],
			[
				"sel",
				"seleted"
			],
			[
				"di",
				"districts"
			],
			[
				"app",
				"applicant"
			],
			[
				"sa",
				"safe_year"
			],
			[
				"saf",
				"safe_id"
			],
			[
				"lo",
				"local"
			],
			[
				"s",
				"store"
			],
			[
				"ma",
				"main_insurance"
			],
			[
				"co",
				"commit"
			],
			[
				"ti",
				"title"
			],
			[
				"f",
				"from"
			],
			[
				"le",
				"length"
			],
			[
				"fi",
				"fields"
			],
			[
				"pass",
				"password3"
			],
			[
				"va",
				"val"
			],
			[
				"com",
				"computed"
			],
			[
				"che",
				"checkZipcode"
			],
			[
				"res",
				"response"
			],
			[
				"oc",
				"occupation"
			],
			[
				"if",
				"if_id"
			],
			[
				"leve",
				"level"
			],
			[
				"pr",
				"provinces"
			],
			[
				"add",
				"addressSlots"
			],
			[
				"bo",
				"bools"
			],
			[
				"fo",
				"forms"
			],
			[
				"cons",
				"console"
			],
			[
				"chec",
				"checkForm"
			],
			[
				"zip",
				"zipcode"
			],
			[
				"shwo",
				"showOccupation"
			],
			[
				"show",
				"showOccupation"
			],
			[
				"query",
				"queryOccupation"
			],
			[
				"ke",
				"keyword"
			],
			[
				"safe",
				"safe_year"
			],
			[
				"att",
				"attr2"
			],
			[
				"lon",
				"longTerm"
			],
			[
				"pa",
				"parse"
			],
			[
				"upc",
				"toUpperCase(): string\tNativeScript - String"
			],
			[
				"mh",
				"mih\tmin-height"
			],
			[
				"json",
				"json_decode"
			],
			[
				"rea",
				"readonly"
			],
			[
				"con",
				"console"
			],
			[
				"dis",
				"disabled"
			],
			[
				"bas",
				"base64Img"
			],
			[
				"getda",
				"getDay(): number\tNativeScript - Date"
			],
			[
				"getM",
				"getMonth(): number\tNativeScript - Date"
			],
			[
				"getY",
				"getFullYear(): number\tNativeScript - Date"
			],
			[
				"setTi",
				"setTimeout( callback: Function, milliseconds?: number ): number\tNativeScript - Module NativeScript"
			],
			[
				"adc",
				"addCss( cssString: string ): void\tNativeScript - Page"
			],
			[
				"tri",
				"trim(): string\tNativeScript - String"
			],
			[
				"sub",
				"submit\t.submit()"
			],
			[
				"base",
				"base64_decode"
			],
			[
				"bor",
				"border"
			],
			[
				"par",
				"parseInt"
			],
			[
				"nex",
				"nextAll\t.nextAll()"
			],
			[
				"fir",
				"firstMoney"
			],
			[
				"sl",
				"slideUp\t.slideUp()"
			],
			[
				"sh",
				"show\t.show()"
			],
			[
				"parent",
				"parent\t.parent()"
			],
			[
				"bacc",
				"background-color"
			],
			[
				"para",
				"params"
			],
			[
				"fl",
				"flag"
			],
			[
				"op",
				"op+\topacity: $1;\nfilter: alpha(opacity=$2);"
			],
			[
				"paren",
				"parents\t.parents()"
			],
			[
				"pare",
				"parent_id"
			],
			[
				"ro",
				"removeAttr"
			],
			[
				"css",
				"css\t.css() - single"
			],
			[
				"ag",
				"age2"
			],
			[
				"select",
				"selected"
			],
			[
				"ht",
				"html\t.html()"
			],
			[
				"ea",
				"each\t.each()"
			],
			[
				"sho",
				"showTips"
			],
			[
				"clos",
				"close"
			],
			[
				"la",
				"layer"
			],
			[
				"pro",
				"progress"
			],
			[
				"fun",
				"function"
			],
			[
				"get_defin",
				"get_defined_vars"
			],
			[
				"tr",
				"true"
			],
			[
				"shre",
				"share_data"
			],
			[
				"get",
				"get\t$.get()"
			],
			[
				"a",
				"auto"
			],
			[
				"mw",
				"max-width"
			],
			[
				"ad",
				"admin_id"
			],
			[
				"eac",
				"each\t$.each()"
			],
			[
				"wid",
				"width"
			],
			[
				"l",
				"log\tjs_snippet"
			],
			[
				"p",
				"pure-u- \tPureCSS class"
			],
			[
				"i",
				"tk_zxsy_icon_1.png\tw:16 h:17"
			],
			[
				"data",
				"data\t.data()"
			],
			[
				"rg",
				"rgba()"
			],
			[
				"li",
				"line-height"
			],
			[
				"for",
				"for\tfor (…) {…}"
			],
			[
				"th",
				"this\t$(this)"
			],
			[
				"crp",
				"cur-p\tcursor: pointer;"
			],
			[
				"remo",
				"removeprop\t.removeProp()"
			],
			[
				"pd",
				"padding"
			],
			[
				"attr",
				"attr\t.attr() - single"
			],
			[
				"bg",
				"bg\tbackground: #${1:000};"
			],
			[
				"to",
				"top"
			],
			[
				"color",
				"color-red"
			],
			[
				"fons",
				"font-size"
			],
			[
				"ge",
				"getfee"
			],
			[
				"c",
				"c\tcolor: #${1:000};"
			],
			[
				"h",
				"height\tAttr"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "<template>\n  <section id=\"Beinsured\">\n    <div class=\"am-list am-list-6lb form\">\n      <div class=\"app-list-header\"><span class=\"app-iconfont\">&#xe631;</span>被保险人信息</div>\n      <div class=\"am-list-body\">\n        <app-input label=\"姓名\">\n          <input slot=\"input\" @change=\"setInfo\" v-model.lazy.trim=\"assured.name\" type=\"text\" placeholder=\"请填写被保险人姓名\">\n          <div slot=\"icon\" v-show=\"assured.name != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"assured.name = ''\"></i></div>\n        </app-input>\n        <app-select label=\"证件类型\">\n          <select v-model.number=\"warranty.assu_card_type\" v-if=\"init.assured\" @change=\"typeChange\">\n            <option disabled>请选择证件类型</option>\n            <option v-for=\"item in init.assured.document_type\" :value=\"item.if_id\">{{item.explain}}</option>\n          </select>\n        </app-select>\n        <app-input label=\"证件号码\">\n          <input slot=\"input\" class=\"uppercase\" @change=\"checkID\" v-model.lazy=\"assured.document_number\" type=\"text\" placeholder=\"请填写被保险人证件号码\">\n          <div slot=\"icon\" v-show=\"assured.document_number != ''\" class=\"am-list-clear\" @click=\"assured.document_number = ''\"><i class=\"am-icon-clear am-icon\"></i></div>\n        </app-input>\n        <app-input label=\"证件有效期\">\n          <div class=\"am-ft-right\" slot=\"input\">\n            <span>长期有效&nbsp;&nbsp;</span>\n          </div>\n          <div class=\"am-switch\" slot=\"icon\">\n            <input type=\"checkbox\" class=\"am-switch-checkbox\" id=\"longTerm2\" v-model=\"longTerm\">\n            <label class=\"am-switch-label\" for=\"longTerm2\">\n              <div class=\"am-switch-inner\"></div>\n              <div class=\"am-switch-switch\"></div>\n            </label>\n          </div>\n        </app-input>\n        <div class=\"am-list-item\" v-show=\"!longTerm\">\n          <div class=\"am-list-label tar app-color-warn\">有效日期</div>\n          <div class=\"am-list-control\">\n            <input :class=\"{'has': assured.document_term != ''}\" :readonly=\"longTerm\" v-model=\"assured.document_term\" type=\"date\" placeholder=\"请填写证件有效期\">\n          </div>\n          <div v-show=\"assured.document_term\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"assured.document_term = ''\"></i></div>\n        </div>\n        <app-input label=\"性别\">\n          <div class=\"am-ft-right\" slot=\"input\">\n            <div class=\"am-switch am-sex\">\n              <input type=\"checkbox\" @change=\"setInfo\" class=\"am-switch-checkbox\" :disabled=\"[57 ,15008].indexOf(warranty.assu_card_type)>-1\" id=\"sex2\" v-model=\"warranty.assu_sex\" :true-value=\"11338\" :false-value=\"11339\">\n              <label class=\"am-switch-label\" for=\"sex2\">\n                <div class=\"am-switch-inner\"></div>\n                <div class=\"am-switch-switch\"></div>\n              </label>\n            </div>\n          </div>\n        </app-input>\n        <app-input label=\"出生日期\">\n          <input slot=\"input\" @change=\"setInfo\" :class=\"{'has': assured.birthday != ''}\" :readonly=\"[57 ,15008].indexOf(warranty.assu_card_type)>-1\" v-model=\"assured.birthday\" type=\"date\" placeholder=\"请填写被保险人出生日期\">\n          <div slot=\"icon\" v-if=\"warranty.assu_card_type !== 57 && warranty.assu_card_type !== 15008\" v-show=\"assured.birthday\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"assured.birthday = ''\"></i></div>\n        </app-input>\n      </div>\n    </div>\n    <div class=\"am-list\" v-if=\"age >= 16\">\n      <div class=\"am-list-header\">请选择个人税收居民身份类型</div>\n      <div class=\"am-list-body\">\n        <label class=\"am-list-item checkbox\" v-for=\"item in init.beneficiary.tax_type\">\n          <div class=\"am-checkbox app-checkbox\">\n            <input type=\"radio\" :value=\"item.if_id\" v-model=\"warranty.assu_tax_type\">\n            <span class=\"icon-check\"></span>\n          </div>\n          <div class=\"am-list-content\">{{item.explain}}</div>\n        </label>\n      </div>\n    </div>\n    <div class=\"am-list am-list-6lb form\">\n      <div class=\"am-list-body\">\n        <app-select label=\"国籍\" v-if=\"warranty.assu_card_type === 58 || warranty.assu_card_type === 24001\">\n          <select v-model.number=\"warranty.assu_nation\" v-if=\"init.assured\">\n            <option disabled value=\"0\">请选择国籍</option>\n            <option v-if=\"item.if_id!=='63'\" v-for=\"item in init.assured.nationality\" :value=\"item.if_id\">{{item.explain}}</option>\n          </select>\n        </app-select>\n        <app-input label=\"国籍\" v-else>\n          <div slot=\"input\">中国</div>\n        </app-input>\n        <app-input label=\"户籍\" v-if=\"warranty.assu_card_type !== 58 && warranty.assu_card_type !== 24001\">\n          <input slot=\"input\" readonly v-model=\"assured.register_select\" type=\"text\" placeholder=\"请选择被保险人户籍\" @click=\"clearRegister\">\n          <div slot=\"icon\" v-show=\"assured.register_select != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"clearRegister\"></i></div>\n        </app-input>\n        <!-- 户籍 -->\n        <app-region v-if=\"init.applicant && warranty.assu_card_type !== 58  && warranty.appl_card_type !== 24001\" :provinces=\"init.applicant.province\" :level=\"1\" ref=\"register\" v-on:regionselect=\"register_selected\"></app-region>\n        <!-- 户籍 -->\n        <app-input label=\"通讯地址\">\n          <div slot=\"input\" @click=\"clearAddress\" placeholder=\"请点击进行选择\" :class=\"{pd:!assured.address_select}\">\n            {{assured.address_select}}\n          </div>\n          <div slot=\"icon\" v-show=\"assured.address_select != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"clearAddress\"></i></div>\n        </app-input>\n        <!-- 通讯地址 -->\n        <app-region v-if=\"init.applicant\" :provinces=\"init.applicant.province\" ref=\"address\" v-on:regionselect=\"address_selected\"></app-region>\n        <div class=\"am-list-item\">\n          <div class=\"am-list-label tar app-color-warn\">详细地址</div>\n          <div class=\"am-list-control\">\n            <input v-model.lazy.trim=\"assured.address\" type=\"text\" placeholder=\"请填写详细通讯地址\">\n          </div>\n          <div slot=\"icon\" v-show=\"assured.address != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"assured.address = ''\"></i></div>\n        </div>\n        <!-- 通讯地址 -->\n      </div>\n    </div>\n    <div class=\"am-list am-list-6lb form\">\n      <div class=\"am-list-body\">\n        <app-input label=\"邮编\">\n          <input slot=\"input\" @change=\"checkZipcode\" maxlength=\"6\" v-model.lazy=\"assured.zipcode\" type=\"text\" placeholder=\"请填写被保险人邮编\">\n          <div slot=\"icon\" v-show=\"assured.zipcode != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"assured.zipcode = ''\"></i></div>\n        </app-input>\n        <app-input label=\"手机号码(选填)\">\n          <input slot=\"input\" @change=\"checkPhone\" v-model.lazy=\"assured.tel\" type=\"text\" placeholder=\"请填写被保险人手机号码\">\n          <div slot=\"icon\" v-show=\"assured.tel != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"assured.tel = ''\"></i></div>\n        </app-input>\n        <app-input label=\"工作单位(选填)\">\n          <input slot=\"input\" v-model.lazy.trim=\"assured.work_unit\" type=\"text\" placeholder=\"请填写被保险人工作单位\">\n          <div slot=\"icon\" v-show=\"assured.work_unit != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"assured.work_unit = ''\"></i></div>\n        </app-input>\n        <app-input label=\"年收入(万元)\">\n          <input slot=\"input\" @change=\"assured.annual_earnings >= 1000000 ? ($toast.open('数值超出范围，请确认单位为万元','warn'),assured.annual_earnings=''):''\" v-model.number.lazy=\"assured.annual_earnings\" type=\"number\" placeholder=\"请填写年收入(万元)\">\n          <div slot=\"icon\" v-show=\"assured.annual_earnings != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"assured.annual_earnings = ''\"></i></div>\n        </app-input>\n        <app-select label=\"收入来源\">\n          <select v-model.number=\"warranty.assu_annual_source\" v-if=\"init.assured\">\n            <option disabled value=\"0\">请选择收入来源</option>\n            <option v-for=\"item in init.assured.annual_source\" :value=\"item.if_id\">{{item.explain}}</option>\n          </select>\n        </app-select>\n        <div class=\"am-list-item\" v-show=\"warranty.assu_annual_source === 15457\">\n          <div class=\"am-list-label tar app-color-warn\">填写收入来源</div>\n          <div class=\"am-list-control\">\n            <input v-model.lazy=\"assured.annual_source_other\" type=\"text\" placeholder=\"请填写收入来源\">\n          </div>\n          <div v-show=\"assured.annual_source_other != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"assured.annual_source_other = ''\"></i></div>\n        </div>\n        <app-input label=\"身高\">\n          <input slot=\"input\" v-model.lazy.number=\"assured.height\" type=\"number\" placeholder=\"请填写身高(cm)\">\n          <div slot=\"icon\" v-show=\"assured.height != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"assured.height = ''\"></i></div>\n        </app-input>\n        <app-input label=\"体重\">\n          <input slot=\"input\" v-model.lazy.number=\"assured.weight\" type=\"number\" placeholder=\"请填写体重(Kg)\">\n          <div slot=\"icon\" v-show=\"assured.weight != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"assured.weight = ''\"></i></div>\n        </app-input>\n        <!-- 职业 -->\n        <app-input label=\"职业\" v-if=\"age > 15\">\n          <div slot=\"input\" @click=\"$refs.occupation.show = true\" placeholder=\"请点击选择职业\" :class=\"{pd:!assured.occupation}\">\n            {{assured.occupation}}\n          </div>\n          <div slot=\"icon\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"clearOccupation\"></i></div>\n        </app-input>\n        <app-input label=\"职业\" v-else>\n          <div slot=\"input\" :class=\"{pd:!assured.occupation}\">\n            {{assured.occupation}}\n          </div>\n        </app-input>\n        <app-occupation ref=\"occupation\"></app-occupation>\n        <!-- 职业 -->\n      </div>\n    </div>\n    <div class=\"am-tab am-fixed am-fixed-bottom app-navi\">\n      <router-link to=\"/insured\" class=\"am-tab-item\">上一步</router-link>\n      <router-link to=\"/prospectus\" class=\"am-tab-item selected\">下一步</router-link>\n    </div>\n  </section>\n</template>\n<script>\nimport Validator from '../widgets/IDValidator'\nimport Api from '../api'\n// 区域选择器\nimport Region from './Region'\nimport Occupation from './Occupation'\n\nexport default {\n  name: 'beinsured',\n  components: {\n    'app-region': Region,\n    'app-occupation': Occupation\n  },\n  data() {\n    return {\n      longTerm: false, //是否长期有效\n      cardinfo: {}, //身份证信息\n      age: '', //年龄\n      // 被保险人信息\n      assured: {\n        war_id: '', //\n        register_select: '', //户籍展示\n        address_select: '', //通信展示\n        name: '', //姓名\n        height: '', //身高(厘米)\n        weight: '', //体重(kg)\n        register: '', //户籍\n        annual_earnings: '', //年收入\n        annual_source_other: '', //其他收入来源\n        birthday: '', //出生日期\n        // 证件\n        document_type_val: '', //证件描述\n        document_number: '', //证件号码\n        document_term: '', //证件有效期\n        // 通信\n        address: '', //通信地址\n        province: '', //省\n        city: '', //市\n        district: '', //区\n        zipcode: '', //通信邮编\n        // 职业\n        occupation: '', //职业\n\n        work_unit: '', //工作单位\n        tel: '' //联系电话\n      },\n      // 保单信息\n      warranty: {\n        assu_sex: '11338', //性别\n        assu_card_type: 57, //证件类型\n        assu_nation: 63, //国籍\n        assu_annual_source: 0, //收入来源\n        assu_tax_type: '', //税收类型\n        assu_occupation_code: '' //职业代码\n      }\n    }\n  },\n  computed: {\n    init() {\n      return this.$store.state.init\n    }\n  },\n  created() {\n    if (this.assured.document_term === '9999-12-30') {\n      this.longTerm = true\n    }\n  },\n  watch: {\n    longTerm(val) {\n      this.assured.document_term = val ? '9999-12-30' : ''\n    },\n    age(val) {\n      if (val >= 0 && val <= 6) {\n        this.assured.occupation = '学龄前儿童'\n        this.warranty.assu_occupation_code = 9602\n      } else if (val > 6 && val <= 15) {\n        this.assured.occupation = '一般学生'\n        this.warranty.assu_occupation_code = 9601\n      } else {\n        this.assured.occupation = ''\n        this.warranty.assu_occupation_code = ''\n      }\n      if (val < 16) {\n        this.warranty.assu_tax_type = ''\n      }\n    }\n  },\n  methods: {\n    typeChange() {\n      this.assured.document_number = ''\n      this.assured.register = ''\n      this.assured.register_select = ''\n      this.warranty.assu_nation = this.warranty.assu_card_type === 58 || this.warranty.assu_card_type === 24001 ? 0 : 63\n    },\n    // 证件号码校验\n    checkID() {\n      this.IDValidate() && this.checkIDExist()\n    },\n    // 检查ID是否有效\n    IDValidate() {\n      const vm = this\n      const type = vm.warranty.assu_card_type\n      const id = vm.assured.document_number\n      var toast_text = null\n\n      switch (type) {\n        case 15008: // 户口簿\n        case 57: // 身份证\n          const addr = vm.$store.state.addr\n          vm.age = 0\n\n          if (Validator.isValid(id, 18)) {\n            const idInfo = Validator.getInfo(id)\n            const code = idInfo.addrCode.substr(0, 2)\n            const sex = { // 0为女，1为男\n              1: '11338',\n              0: '11339'\n            }\n            vm.assured.birthday = idInfo.birth\n            vm.warranty.assu_sex = sex[idInfo.sex]\n            vm.assured.register_select = addr[code].name\n            vm.assured.register = addr[code].if_id\n\n            const age = vm.getAge(vm.assured.birthday)\n            vm.age = age\n            if (age < 16) {\n              vm.assured.annual_earnings = 0 //小于16周岁默认为0，可修改\n              vm.warranty.assu_annual_source = 15457\n              vm.assured.annual_source_other = '无'\n            }\n          } else {\n            toast_text = '请输入正确的18位数证件号码'\n            vm.assured.register_select = ''\n            vm.assured.birthday = ''\n          }\n          break\n        case 58: // 护照\n          if (id.length <= 3) {\n            toast_text = '护照必须是大于3位'\n          }\n          break\n        case 59: // 军官证\n          if (id.length > 18 || id.length < 10) {\n            toast_text = '军官证必须是10-18位'\n          }\n          break\n        case 15009: //港澳\n          if (id.length <= 8) {\n            toast_text = '港澳居民来往内地通行证号码必须大于8位'\n          }\n          break\n        case 15010: //台湾\n          if (id.length < 8) {\n            toast_text = '台湾居民来往大陆通行证号码必须大于等于8位'\n          }\n          break\n        case 24001: // 外国人身份证\n          if (id.length !== 15) {\n            toast_text = '外国人永久居留身份证位为15位'\n          } else if (!/^[a-z]{3}\\d{12}$/gi.test(id)) {\n            toast_text = '外国人永久居留身份证号码不正确'\n          }\n          break\n        default:\n          break\n      }\n      if (toast_text) {\n        vm.$toast.open(toast_text, '')\n        return false\n      }\n      vm.assured.document_number = id.toUpperCase()\n      return true\n    },\n    // 检查ID是否存在\n    checkIDExist() {\n      const vm = this\n      const id = vm.assured.document_number\n      Api.queryID(id, 'assured', res => {\n        if (res.name && res.name.indexOf('Error') > -1) {\n          vm.$toast.open('服务器开小差了', 'error')\n          return\n        }\n        // 不存在 assu_id\n        if (!res.assu_id) {\n          vm.assured.assu_id && vm.$delete(vm.assured, 'assu_id')\n          return false\n        }\n        vm.cardinfo = res\n        vm.$set(vm.assured, 'assu_id', res.assu_id)\n        vm.setInfo()\n      })\n    },\n    setInfo() {\n      var vm = this\n      var res = vm.cardinfo\n\n      if (vm.assured.birthday) {\n        vm.age = Api.getAge(vm.assured.birthday)\n      }\n\n      // 是否同人\n      if (vm.assured.name !== res.name || vm.assured.document_number !== res.document_number || vm.assured.birthday !== res.birthday) {\n        return\n      }\n      var assured = {}\n\n      assured.name = res.name\n      assured.annual_earnings = Number(res.annual_earnings)\n      assured.document_term = res.document_term\n      assured.height = res.height\n      assured.weight = res.weight\n      assured.register = res.register\n      assured.tel = res.tel\n      assured.work_unit = res.work_unit\n      assured.zipcode = res.zipcode\n      if (res.document_term === '9999-12-30') vm.longTerm = true\n      vm.assured = Object.assign(vm.assured, assured)\n    },\n    // 户籍选择\n    register_selected(selected) {\n      var toast_text = null\n      if (selected.length === 0 || !selected[0]) {\n        toast_text = '请先选择户籍'\n      }\n      this.local && console.info(selected)\n      if (this.warranty.assu_card_type === 15009 && ['3844', '3866'].indexOf(selected[0].if_id) === -1) {\n        toast_text = '证件类型为港澳居民来往内地通行证时，户籍必须是香港或澳门'\n      } else if (this.warranty.assu_card_type === 15010 && selected[0].if_id !== '3453') {\n        toast_text = '证件类型为台湾居民来往大陆通行证时，户籍必须是台湾'\n      } else if ([57, 59, 15008].indexOf(this.warranty.assu_card_type) > -1 && ['3453', '3844', '3866'].indexOf(selected[0].if_id) > -1) {\n        toast_text = '证件类型为身份证、户口簿或军官证时，户籍不能是香港、澳门或台湾'\n      }\n      if (toast_text) {\n        console.info(toast_text)\n        this.$toast.open(toast_text, '', 3000)\n        this.$nextTick(() => {\n          this.$refs.register.clear()\n        })\n        return false\n      }\n\n      this.local && console.info(selected)\n      this.$set(this.assured, 'register', selected[0].if_id)\n      this.$set(this.assured, 'register_select', selected[0].explain)\n    },\n    // 清除户籍\n    clearRegister() {\n      this.assured.register = ''\n      this.assured.register_select = ''\n      this.$refs.register.clear()\n    },\n    // 通讯地址选择\n    address_selected(selected) {\n      if (selected.length === 0 || !selected[0]) {\n        this.$toast.open('请先选择通讯地址', 'warn')\n        return false\n      }\n      this.local && console.info(selected)\n      var vm = this\n      var select_show = selected[0].explain\n      vm.$set(vm.assured, 'province', selected[0].if_id)\n      if (selected[1]) {\n        select_show += selected[1].explain\n        vm.$set(vm.assured, 'city', selected[1].if_id)\n      }\n      if (selected[2]) {\n        select_show += selected[2].explain\n        vm.$set(vm.assured, 'district', selected[2].if_id)\n        Api.queryZipcode(selected[2].code, response => {\n          if (!response) {\n            Api.queryZipcode(selected[1].code, response => {\n              if (!response) return\n              vm.$set(vm.assured, 'zipcode', response)\n            })\n            return\n          }\n          vm.assured.zipcode = response\n        })\n      }\n      vm.$set(vm.assured, 'address_select', select_show)\n    },\n    // 清除通讯地址\n    clearAddress() {\n      this.assured.province = ''\n      this.assured.city = ''\n      this.assured.district = ''\n      this.assured.address_select = ''\n      this.$refs.address.clear()\n    },\n    // 邮编校验\n    checkZipcode() {\n      var zipcode = this.assured.zipcode\n      var toast_text = null\n      if (!zipcode) {\n        toast_text = '邮编不能为空'\n      } else if (!/^[0-9]{6}$/.test(zipcode)) {\n        toast_text = '请输入6位数字邮编'\n      }\n      if (toast_text) {\n        console.info(toast_text)\n        this.$toast.open(toast_text, 'warn')\n        return false\n      }\n      return true\n    },\n    // 手机校验\n    checkPhone() {\n      const tel = this.assured.tel\n      var toast_text = null\n      if (this.warranty.assu_card_type === 15009 && !/^1[3|4|5|7|8][0-9]{9}$|^00852[0-9]{8}$/.test(tel)) {\n        toast_text = '请输入正确的11位或13位手机号'\n      } else if (!/^1[3|4|5|7|8][0-9]{9}$/.test(tel)) {\n        toast_text = '请输入正确的11位手机号'\n      }\n      if (toast_text) {\n        this.$toast.open(toast_text, 'warn')\n        return false\n      }\n      return true\n    },\n    // 设置职业\n    setOccupation(selected) {\n      this.local && console.log(selected)\n      this.assured.occupation = selected.explain\n      this.warranty.assu_occupation_code = selected.if_id\n    },\n    // 清除职业\n    clearOccupation() {\n      this.assured.occupation = ''\n      this.warranty.assu_occupation_code = ''\n      this.$refs.occupation.show = true\n    },\n    // 校验表单\n    checkForm() {\n      const vm = this\n      var toast_text = null\n      if (!vm.assured.name) {\n        toast_text = '请填写被保险人【姓名】'\n      } else if (!vm.IDValidate()) {\n        toast_text = '请填写被保险人【证件号码】'\n      } else if (vm.longTerm === false && (!vm.assured.document_term || vm.assured.document_term === '0000-00-00')) {\n        toast_text = '请填写被保险人【证件有效期】'\n      } else if (!vm.assured.birthday) {\n        toast_text = '请选择被保险人【出生日期】'\n      } else if (!vm.warranty.assu_tax_type && vm.age >= 16) {\n        toast_text = '请选择被保险人个人税收居民身份类型'\n      } else if (!vm.warranty.assu_nation) {\n        toast_text = '请选择被保险人【国籍】'\n      } else if (!vm.assured.register && vm.warranty.assu_card_type !== 58 && vm.warranty.assu_card_type !== 24001) {\n        toast_text = '请选择被保险人【户籍】'\n      } else if (!vm.assured.province) {\n        toast_text = '请选择被保险人【通讯地址省份】'\n      } else if (!vm.assured.city && vm.assured.province !== '3877') {\n        toast_text = '请选择被保险人【通讯地址市区】'\n      } else if (!vm.assured.district && vm.assured.province !== '3877') {\n        toast_text = '请选择被保险人【通讯地址县/区】'\n      } else if (!vm.assured.address) {\n        toast_text = '请填写被保险人【详细地址】'\n      } else if (!this.checkZipcode()) {\n        return false\n      } else if (!vm.assured.annual_earnings && vm.assured.annual_earnings !== 0) {\n        toast_text = '请填写被保险人【年收入】'\n      } else if (!vm.warranty.assu_annual_source) {\n        toast_text = '请选择被保险人【收入来源】'\n      } else if (vm.warranty.assu_annual_source === 15457 && !vm.assured.annual_source_other) {\n        toast_text = '请填写投保人【收入来源】'\n      } else if (!vm.assured.height) {\n        toast_text = '请填写被保险人【身高】'\n      } else if (!vm.assured.weight) {\n        toast_text = '请填写被保险人【体重】'\n      } else if (!vm.warranty.assu_occupation_code) {\n        toast_text = '请填写被保险人【职业】'\n      }\n      if (toast_text) {\n        console.info(toast_text)\n        this.$toast.open(toast_text, '')\n        return false\n      }\n      return this.IDValidate()\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    if (to.path === '/insured') {\n      next()\n      return false\n    }\n    if (!this.checkForm()) {\n      return false\n    }\n    this.$store.commit('saveAssured', this.assured)\n    this.$store.commit('setWarranty', this.warranty)\n    next()\n  }\n}\n</script>\n",
			"file": "src/components/Beinsured.vue",
			"file_size": 23907,
			"file_write_time": 131432971079347195,
			"settings":
			{
				"buffer_size": 21962,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/components/Prospectus.vue",
			"settings":
			{
				"buffer_size": 12425,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/components/Notice.vue",
			"settings":
			{
				"buffer_size": 3285,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/components/Preview.vue",
			"settings":
			{
				"buffer_size": 31514,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "dist/XT_ins2c.html",
			"settings":
			{
				"buffer_size": 1438,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/components/Healthinfo.vue",
			"settings":
			{
				"buffer_size": 15248,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/widgets/Storage.js",
			"settings":
			{
				"buffer_size": 492,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/components/Occupation.vue",
			"settings":
			{
				"buffer_size": 6492,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/components/Beneficiary.vue",
			"settings":
			{
				"buffer_size": 20179,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n  <section id=\"Insured\">\n    <div class=\"am-list am-list-6lb form\">\n      <div class=\"app-list-header\"><span class=\"app-iconfont\">&#xe631;</span>投保人信息</div>\n      <div class=\"am-list-body\">\n        <app-input label=\"姓名\">\n          <input slot=\"input\" v-model.lazy.trim=\"applicant.name\" type=\"text\" placeholder=\"请填写投保人姓名\" @change=\"setInfo\">\n          <div slot=\"icon\" v-show=\"applicant.name != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"applicant.name = ''\"></i></div>\n        </app-input>\n        <app-select label=\"证件类型\">\n          <select v-model.number=\"warranty.appl_card_type\" v-if=\"init.applicant\" @change=\"typeChange\">\n            <option disabled>请选择证件类型</option>\n            <option v-for=\"item in init.applicant.document_type\" :value=\"item.if_id\">{{item.explain}}</option>\n          </select>\n        </app-select>\n        <app-input label=\"证件号码\">\n          <input slot=\"input\" v-model.lazy=\"applicant.document_number\" type=\"text\" placeholder=\"请填写投保人证件号码\" class=\"uppercase\">\n          <div slot=\"icon\" v-show=\"applicant.document_number != ''\" class=\"am-list-clear\" @click=\"applicant.document_number = ''\"><i class=\"am-icon-clear am-icon\"></i></div>\n        </app-input>\n        <app-input label=\"证件有效期\">\n          <div class=\"am-ft-right\" slot=\"input\">\n            <span>长期有效&nbsp;&nbsp;</span>\n          </div>\n          <div class=\"am-switch\" slot=\"icon\">\n            <input type=\"checkbox\" class=\"am-switch-checkbox\" id=\"longTerm\" v-model=\"longTerm\">\n            <label class=\"am-switch-label\" for=\"longTerm\">\n              <div class=\"am-switch-inner\"></div>\n              <div class=\"am-switch-switch\"></div>\n            </label>\n          </div>\n        </app-input>\n        <div class=\"am-list-item\" v-show=\"!longTerm\">\n          <div class=\"am-list-label tar app-color-warn\">有效日期</div>\n          <div class=\"am-list-control\">\n            <input :class=\"{'has': applicant.document_term != ''}\" :readonly=\"longTerm\" v-model=\"applicant.document_term\" type=\"date\" placeholder=\"请填写证件有效期\">\n          </div>\n          <div v-show=\"applicant.document_term\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"applicant.document_term = ''\"></i></div>\n        </div>\n        <app-input label=\"性别\">\n          <div class=\"am-ft-right\" slot=\"input\">\n            <div class=\"am-switch am-sex\">\n              <input type=\"checkbox\" @change=\"setInfo\" class=\"am-switch-checkbox\" for=\"sex\" :disabled=\"warranty.appl_card_type === 57 || warranty.appl_card_type === 15008\" v-model=\"warranty.appl_sex\" :true-value=\"11338\" :false-value=\"11339\">\n              <label class=\"am-switch-label\" for=\"sex\">\n                <div class=\"am-switch-inner\"></div>\n                <div class=\"am-switch-switch\"></div>\n              </label>\n            </div>\n          </div>\n        </app-input>\n        <!-- 证件为身份证和户口本 性别和 出生日期 不允许修改 -->\n        <app-input label=\"出生日期\">\n          <input slot=\"input\" @change=\"setInfo\" :class=\"{'has': applicant.birthday != ''}\" :readonly=\"warranty.appl_card_type === 57 || warranty.appl_card_type === 15008\" v-model=\"applicant.birthday\" type=\"date\" placeholder=\"请填写投保人出生日期\">\n          <div slot=\"icon\" v-if=\"warranty.appl_card_type !== 57 && warranty.appl_card_type !== 15008\" v-show=\"applicant.birthday\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"applicant.birthday = ''\"></i></div>\n        </app-input>\n      </div>\n    </div>\n    <div class=\"am-list\" v-if=\"getAge(applicant.birthday) >= 16\">\n      <div class=\"am-list-header\">请选择个人税收居民身份类型</div>\n      <div class=\"am-list-body\">\n        <label class=\"am-list-item checkbox\" v-for=\"item in init.beneficiary.tax_type\">\n          <div class=\"am-checkbox app-checkbox\">\n            <input type=\"radio\" :value=\"item.if_id\" v-model=\"warranty.appl_tax_type\">\n            <span class=\"icon-check\"></span>\n          </div>\n          <div class=\"am-list-content\">{{item.explain}}</div>\n        </label>\n      </div>\n    </div>\n    <div class=\"am-list am-list-6lb form\">\n      <div class=\"am-list-body\">\n        <!-- 证件为护照时 可以修改国籍 -->\n        <app-select label=\"国籍\" v-if=\"warranty.appl_card_type === 58 || warranty.appl_card_type === 24001\">\n          <select v-model.number=\"warranty.appl_nation\" v-if=\"init.applicant\">\n            <option disabled value=\"0\">请选择国籍</option>\n            <option v-if=\"item.if_id !== '63'\" v-for=\"item in init.applicant.nationality\" :value=\"item.if_id\">{{item.explain}}</option>\n          </select>\n        </app-select>\n        <app-input label=\"国籍\" v-else>\n          <div slot=\"input\">中国</div>\n        </app-input>\n        <app-input label=\"户籍\" v-if=\"warranty.appl_card_type !== 58 && warranty.appl_card_type !== 24001\">\n          <input slot=\"input\" readonly @click=\"clearRegister\" v-model=\"applicant.register_select\" type=\"text\" placeholder=\"请选择投保人户籍\">\n          <div slot=\"icon\" v-show=\"applicant.register_select != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"clearRegister\"></i></div>\n        </app-input>\n        <!-- 户籍 -->\n        <app-region v-if=\"init.applicant && warranty.appl_card_type !== 58 && warranty.appl_card_type !== 24001\" :provinces=\"init.applicant.province\" v-on:regionselect=\"register_selected\" ref=\"register\" :level=\"1\"></app-region>\n        <!-- 户籍 -->\n        <app-input label=\"通讯地址\">\n          <div slot=\"input\" @click=\"clearAddress\" placeholder=\"请点击进行选择\" :class=\"{pd:!applicant.address_select}\">\n            {{applicant.address_select}}\n          </div>\n          <div slot=\"icon\" v-show=\"applicant.address_select != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"clearAddress\"></i></div>\n        </app-input>\n        <!-- 通讯地址 -->\n        <app-region v-if=\"init.applicant\" :provinces=\"init.applicant.province\" v-on:regionselect=\"address_selected\" ref=\"address\"></app-region>\n        <!-- 通讯地址 -->\n        <div class=\"am-list-item\">\n          <div class=\"am-list-label tar app-color-warn\">详细地址</div>\n          <div class=\"am-list-control\">\n            <input v-model.lazy.trim=\"applicant.address\" type=\"text\" placeholder=\"请填写详细通讯地址\">\n          </div>\n          <div slot=\"icon\" v-show=\"applicant.address != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"applicant.address = ''\"></i></div>\n        </div>\n      </div>\n    </div>\n    <div class=\"am-list am-list-6lb form\">\n      <div class=\"am-list-body\">\n        <app-input label=\"邮编\">\n          <input slot=\"input\" @change=\"checkZipcode\" maxlength=\"6\" v-model.lazy=\"applicant.zipcode\" type=\"text\" placeholder=\"请填写投保人邮编\">\n          <div slot=\"icon\" v-show=\"applicant.zipcode != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"applicant.zipcode = ''\"></i></div>\n        </app-input>\n        <app-input label=\"手机号码\">\n          <input slot=\"input\" @change=\"checkPhone\" v-model.lazy=\"applicant.tel\" type=\"text\" placeholder=\"请填写投保人手机号码\">\n          <div slot=\"icon\" v-show=\"applicant.tel != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"applicant.tel = ''\"></i></div>\n        </app-input>\n        <app-input label=\"固定电话(选填)\">\n          <input slot=\"input\" @change=\"checkTel\" v-model.lazy.trim=\"applicant.visit_tel\" type=\"text\" placeholder=\"请填写投保人固定电话\">\n          <div slot=\"icon\" v-show=\"applicant.visit_tel != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"applicant.visit_tel = ''\"></i></div>\n        </app-input>\n        <app-input label=\"工作单位(选填)\">\n          <input slot=\"input\" v-model.lazy.trim=\"applicant.work_unit\" type=\"text\" placeholder=\"请填写投保人工作单位\">\n          <div slot=\"icon\" v-show=\"applicant.work_unit != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"applicant.work_unit = ''\"></i></div>\n        </app-input>\n        <app-input label=\"年收入(万元)\">\n          <input slot=\"input\" @change=\"applicant.annual_earnings >= 1000000 ? ($toast.open('数值超出范围，请确认单位为万元','warn'),applicant.annual_earnings=''):''\" v-model.number.lazy=\"applicant.annual_earnings\" type=\"number\" placeholder=\"请填写年收入(万元)\">\n          <div slot=\"icon\" v-show=\"applicant.annual_earnings != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"applicant.annual_earnings = ''\"></i></div>\n        </app-input>\n        <app-select label=\"收入来源\">\n          <select v-model.number=\"warranty.appl_annual_source\" v-if=\"init.applicant\">\n            <option disabled value=\"0\">请选择收入来源</option>\n            <option v-for=\"item in init.applicant.annual_source\" :value=\"item.if_id\">{{item.explain}}</option>\n          </select>\n        </app-select>\n        <app-input label=\"\" v-show=\"warranty.appl_annual_source === 15457\">\n          <input slot=\"input\" v-model.lazy=\"applicant.annual_source_other\" type=\"text\" placeholder=\"请填写收入来源\">\n          <div slot=\"icon\" v-show=\"applicant.annual_source_other != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"applicant.annual_source_other = ''\"></i></div>\n        </app-input>\n        <app-input label=\"身高\">\n          <input slot=\"input\" v-model.number.lazy=\"applicant.height\" type=\"number\" placeholder=\"请填写身高(cm)\">\n          <div slot=\"icon\" v-show=\"applicant.height != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"applicant.height = ''\"></i></div>\n        </app-input>\n        <app-input label=\"体重\">\n          <input slot=\"input\" v-model.number.lazy=\"applicant.weight\" type=\"number\" placeholder=\"请填写体重(Kg)\">\n          <div slot=\"icon\" v-show=\"applicant.weight != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"applicant.weight = ''\"></i></div>\n        </app-input>\n        <app-select label=\"是被保险人的\">\n          <select v-model.number=\"warranty.is_assured\" v-if=\"init.warranty\">\n            <option disabled>请选择</option>\n            <option v-for=\"item in init.warranty.is_assured\" :value=\"item.if_id\">{{item.explain}}</option>\n          </select>\n        </app-select>\n        <app-input label=\"\" v-show=\"warranty.is_assured === 15017\">\n          <input slot=\"input\" v-model=\"warranty.is_assured_val\" type=\"text\" placeholder=\"请填写是被保险人的\">\n          <div slot=\"icon\" @click=\"warranty.is_assured_val = ''\" v-show=\"warranty.is_assured_val != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\"></i></div>\n        </app-input>\n        <app-input label=\"职业\">\n          <div slot=\"input\" @click=\"$refs.occupation.show = true\" placeholder=\"请点击选择职业\" :class=\"{pd:!applicant.occupation}\">\n            {{applicant.occupation}}\n          </div>\n          <div slot=\"icon\" v-show=\"applicant.occupation\" @click=\"clearOccupation\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\"></i></div>\n        </app-input>\n        <!-- 职业 -->\n        <app-occupation ref=\"occupation\"></app-occupation>\n        <!-- 职业 -->\n        <app-select label=\"合同争议处理方式\">\n          <select v-model=\"warranty.contract_handle\" v-if=\"init.warranty\">\n            <option disabled>请选择</option>\n            <option v-for=\"item in init.warranty.contract_handle\" :value=\"item.if_id\">{{item.explain}}</option>\n          </select>\n        </app-select>\n        <app-input label=\"仲裁委员会\" v-show=\"warranty.contract_handle === '109'\">\n          <input slot=\"input\" v-model.lazy=\"warranty.contract_handle_value\" type=\"text\" placeholder=\"请填写仲裁委员会名称\">\n          <div slot=\"icon\" v-show=\"warranty.contract_handle_value != ''\" class=\"am-list-clear\"><i class=\"am-icon-clear am-icon\" @click=\"warranty.contract_handle_value = ''\"></i></div>\n        </app-input>\n      </div>\n    </div>\n    <div class=\"am-tab am-fixed am-fixed-bottom app-navi\">\n      <router-link to=\"/\" class=\"am-tab-item\">上一步</router-link>\n      <a @click=\"next\" class=\"am-tab-item selected\">下一步</a>\n    </div>\n  </section>\n</template>\n<script>\nimport Validator from '../widgets/IDValidator'\nimport Api from '../api'\n// 区域选择器\nimport Region from './Region'\nimport Occupation from './Occupation'\n\nexport default {\n  name: 'Insured',\n  components: {\n    'app-region': Region,\n    'app-occupation': Occupation\n  },\n  data() {\n    return {\n      longTerm: false, //是否长期有效\n      cardinfo: {}, //身份证信息\n      // 投保人信息\n      applicant: {\n        register_select: '', //户籍展示\n        address_select: '', //通信展示\n        name: '', //姓名\n        height: '', //身高(厘米)\n        weight: '', //体重(kg)\n        register: '', //户籍\n        annual_earnings: '', //年收入\n        // annual_source: 0, //收入来源\n        annual_source_other: '', //其他收入来源\n        birthday: '', //出生日期\n        // 证件\n        // document_type: '1', //证件类型\n        document_type_val: '', //证件描述\n        document_number: '', //证件号码\n        document_term: '', //证件有效期\n        // 通信\n        address: '', //通信地址\n        province: '', //省\n        city: '', //市\n        district: '', //区\n        zipcode: '', //通信邮编\n        // 职业\n        occupation: '', //职业\n\n        work_unit: '', //工作单位\n        visit_tel: '', //回访电话\n        tel: '' //联系电话\n      },\n      assured: {\n        war_id: ''\n      },\n      // 保单信息\n      warranty: {\n        appl_sex: '11338', //性别\n        appl_card_type: 57, //证件类型\n        appl_nation: 63, //国籍\n        appl_annual_source: 0, //收入来源\n        appl_occupation_code: '', //职业代码\n        appl_tax_type: '', //税收类型\n\n        is_assured: 15000, //是被保险人的\n        is_assured_val: '', //是被保险人值\n\n        contract_handle: '108', //合同争议处理方式\n        contract_handle_value: '' //填写仲裁委员会名称\n      }\n    }\n  },\n  computed: {\n    init() {\n      return this.$store.state.init || {}\n    }\n  },\n  watch: {\n    longTerm(val) {\n      this.applicant.document_term = val ? '9999-12-30' : ''\n    }\n  },\n  created() {\n/*    if (this.applicant.document_term === '9999-12-30') {\n      this.longTerm = true\n    }\n    if (this.applicant.document_number) {\n      this.checkID()\n    }*/\n    this.$watch('applicant.document_number', val => {\n      this.IDValidate() && this.checkIDExist()\n    })\n  },\n  methods: {\n    typeChange() {\n      this.applicant.document_number = ''\n      this.applicant.register_select = ''\n      this.applicant.register = ''\n      this.warranty.appl_nation = this.warranty.appl_card_type === 58 || this.warranty.appl_card_type === 24001 ? 0 : 63\n    },\n    // 检查ID是否有效\n    IDValidate() {\n      const vm = this\n      const type = vm.warranty.appl_card_type\n      const id = vm.applicant.document_number\n      var toast_text = null\n\n      switch (type) {\n        case 15008: // 户口簿\n        case 57: // 身份证\n\n          const addr = this.$store.state.addr\n\n          if (Validator.isValid(id, 18)) {\n            const idInfo = Validator.getInfo(id)\n            const code = idInfo.addrCode.substr(0, 2)\n            const sex = { // 0为女，1为男\n              1: '11338',\n              0: '11339'\n            }\n            vm.applicant.birthday = idInfo.birth\n            vm.warranty.appl_sex = sex[idInfo.sex]\n\n            vm.applicant.register_select || (vm.applicant.register_select = addr[code].name)\n            vm.applicant.register || (vm.applicant.register = addr[code].if_id)\n\n            // return this.checkAge()\n          } else {\n            toast_text = '请输入正确的18位数证件号码'\n            vm.applicant.register_select = ''\n            vm.applicant.register = ''\n            vm.applicant.birthday = ''\n          }\n          break\n        case 58: // 护照\n          if (id.length <= 3) {\n            toast_text = '护照必须是大于3位'\n          }\n          break\n        case 59: // 军官证\n          if (id.length > 18 || id.length < 10) {\n            toast_text = '军官证必须是10-18位'\n          }\n          break\n        case 15009: //港澳\n          if (id.length <= 8) {\n            toast_text = '港澳居民来往内地通行证号码必须大于8位'\n          }\n          break\n        case 15010: //台湾\n          if (id.length < 8) {\n            toast_text = '台湾居民来往大陆通行证号码必须大于等于8位'\n          }\n          break\n        case 24001: // 外国人身份证\n          if (id.length !== 15) {\n            toast_text = '外国人永久居留身份证位为15位'\n          } else if (!/^[a-z]{3}\\d{12}$/gi.test(id)) {\n            toast_text = '外国人永久居留身份证号码不正确'\n          }\n          break\n        default:\n          break\n      }\n      if (toast_text) {\n        vm.$toast.open(toast_text, '')\n        return false\n      }\n      vm.applicant.document_number = id.toUpperCase()\n      return true\n    },\n    // 检查ID是否存在\n    checkIDExist() {\n      const vm = this\n      const id = vm.applicant.document_number\n      Api.queryID(id, 'applicant', res => {\n        if (res.name && res.name.indexOf('Error') > -1) {\n          vm.$toast.open('服务器开小差了', 'error')\n          return\n        }\n\n        // 不存在 appl_id\n        if (!res.appl_id && vm.applicant.appl_id) {\n          vm.$delete(vm.applicant, 'appl_id')\n          vm.cardinfo = {}\n          return false\n        }\n        vm.cardinfo = res\n        vm.$set(vm.applicant, 'appl_id', res.appl_id)\n        vm.setInfo()\n      })\n    },\n    setInfo() {\n      var vm = this\n      var res = vm.cardinfo\n\n      // 是否同人\n      if (vm.applicant.name !== res.name || vm.applicant.document_number !== res.document_number || vm.applicant.birthday !== res.birthday) {\n        return\n      }\n      var applicant = {}\n\n      applicant.annual_earnings = Number(res.annual_earnings)\n      applicant.document_term = res.document_term\n      applicant.height = res.height\n      applicant.weight = res.weight\n      applicant.name = res.name\n      applicant.register = res.register\n      applicant.tel = res.tel\n      applicant.visit_tel = res.visit_tel\n      applicant.work_unit = res.work_unit\n      applicant.zipcode = res.zipcode\n      if (res.document_term === '9999-12-30') vm.longTerm = true\n      vm.applicant = Object.assign(vm.applicant, applicant)\n    },\n    // 年龄验证\n    checkAge() {\n      const age = this.getAge(this.applicant.birthday)\n      if (age <= 16) {\n        this.$toast.open('投保人年龄不符合规定，请更换投保人', 'error')\n        return false\n      }\n      if (age < 16) {\n        this.warranty.appl_tax_type = ''\n      }\n      return true\n    },\n    // 户籍选择\n    register_selected(selected) {\n      var toast_text = null\n      if (selected.length === 0 || !selected[0]) {\n        toast_text = '请先选择户籍'\n      }\n      this.local && console.info(selected)\n      if (this.warranty.appl_card_type === 15009 && ['3844', '3866'].indexOf(selected[0].if_id) === -1) {\n        toast_text = '证件类型为港澳居民来往内地通行证时，户籍必须是香港或澳门'\n      } else if (this.warranty.appl_card_type === 15010 && selected[0].if_id !== '3453') {\n        toast_text = '证件类型为台湾居民来往大陆通行证时，户籍必须是台湾'\n      } else if ([57, 59, 15008].indexOf(this.warranty.appl_card_type) > -1 && ['3453', '3844', '3866'].indexOf(selected[0].if_id) > -1) {\n        toast_text = '证件类型为身份证、户口簿或军官证时，户籍不能是香港、澳门或台湾'\n      }\n      if (toast_text) {\n        console.info(toast_text)\n        this.$toast.open(toast_text, '', 3000)\n        this.$nextTick(() => {\n          this.$refs.register.clear()\n        })\n        return false\n      }\n      this.$set(this.applicant, 'register', selected[0].if_id)\n      this.$set(this.applicant, 'register_select', selected[0].explain)\n    },\n    // 清除户籍\n    clearRegister() {\n      this.applicant.register = ''\n      this.applicant.register_select = ''\n      this.$refs.register.clear()\n    },\n    // 通讯地址选择\n    address_selected(selected) {\n      if (selected.length === 0 || !selected[0]) {\n        this.$toast.open('请先选择通讯地址', 'warn')\n        return false\n      }\n      this.local && console.info(selected)\n      var vm = this\n      var select_show = ''\n      select_show += selected[0].explain\n      vm.$set(vm.applicant, 'province', selected[0].if_id)\n      if (selected[1]) {\n        select_show += selected[1].explain\n        vm.$set(vm.applicant, 'city', selected[1].if_id)\n      }\n      if (selected[2]) {\n        select_show += selected[2].explain\n        vm.$set(vm.applicant, 'district', selected[2].if_id)\n        Api.queryZipcode(selected[2].code, response => {\n          if (!response) {\n            Api.queryZipcode(selected[1].code, response => {\n              if (!response) return\n              vm.$set(vm.applicant, 'zipcode', response)\n            })\n            return\n          }\n          vm.applicant.zipcode = response\n        })\n      }\n      vm.$set(vm.applicant, 'address_select', select_show)\n    },\n    // 清除通讯地址\n    clearAddress() {\n      this.applicant.province = ''\n      this.applicant.city = ''\n      this.applicant.district = ''\n      this.applicant.address_select = ''\n      this.$refs.address.clear()\n    },\n    // 邮编校验\n    checkZipcode() {\n      var zipcode = this.applicant.zipcode\n      var toast_text = null\n      if (!zipcode) {\n        toast_text = '邮编不能为空'\n      } else if (!/^[0-9]{6}$/.test(zipcode)) {\n        toast_text = '请输入6位数字邮编'\n      }\n      if (toast_text) {\n        console.info(toast_text)\n        this.$toast.open(toast_text, 'warn')\n        return false\n      }\n      return true\n    },\n    // 手机校验\n    checkPhone() {\n      const tel = this.applicant.tel\n      var toast_text = null\n      if (!tel) {\n        toast_text = '手机号不能为空'\n      } else if (this.warranty.appl_card_type === 15009) {\n        if (!/^1[3|4|5|7|8][0-9]{9}$|^00852[0-9]{8}$/.test(tel)) {\n          toast_text = '请输入正确的11位或13位手机号'\n        }\n      } else if (!/^1[3|4|5|7|8][0-9]{9}$/.test(tel)) {\n        toast_text = '请输入正确的11位手机号'\n      }\n      if (toast_text) {\n        console.info(toast_text)\n        this.$toast.open(toast_text, 'warn')\n        return false\n      }\n      return true\n    },\n    // 电话校验\n    checkTel() {\n      if (!/^0\\d{10,11}$/.test(this.applicant.visit_tel)) {\n        this.$toast.open('电话以0开头,格式为区号+号码,如:01012345678', '')\n      }\n    },\n    // 设置职业\n    setOccupation(selected) {\n      this.warranty.appl_occupation_code = selected.if_id\n      this.applicant.occupation = selected.explain\n    },\n    // 清除职业\n    clearOccupation() {\n      this.warranty.appl_occupation_code = ''\n      this.applicant.occupation = ''\n      this.$refs.occupation.show = true\n    },\n    // 校验表单\n    checkForm() {\n      const vm = this\n      var toast_text = null\n      if (!vm.applicant.name) {\n        toast_text = '请填写投保人【姓名】'\n      } else if (!vm.IDValidate()) {\n        return false\n      } else if (vm.longTerm === false && (!vm.applicant.document_term || vm.applicant.document_term === '0000-00-00')) {\n        toast_text = '请填写投保人【证件有效期】'\n      } else if (!vm.applicant.birthday) {\n        toast_text = '请选择投保人【出生日期】'\n      } else if (!this.checkAge()) {\n        return false\n      } else if (!vm.warranty.appl_tax_type && vm.getAge(vm.applicant.birthday) >= 16) {\n        toast_text = '请选择投保人个人税收居民身份类型'\n      } else if (!vm.warranty.appl_nation) {\n        toast_text = '请选择投保人【国籍】'\n      } else if (!vm.applicant.register && vm.warranty.appl_card_type !== 58 && this.warranty.appl_card_type !== 24001) {\n        toast_text = '请选择投保人【户籍】'\n      } else if (!vm.applicant.province) {\n        toast_text = '请选择投保人【通讯地址省份】'\n      } else if (!vm.applicant.city && vm.applicant.province !== '3877') {\n        toast_text = '请选择投保人【通讯地址市区】'\n      } else if (!vm.applicant.district && vm.applicant.province !== '3877') {\n        toast_text = '请选择投保人【通讯地址县/区】'\n      } else if (!vm.applicant.address) {\n        toast_text = '请填写投保人【详细地址】'\n      } else if (!this.checkZipcode()) {\n        return false\n      } else if (!this.checkPhone()) {\n        return false\n      } else if (!vm.applicant.annual_earnings && vm.assured.annual_earnings !== 0) {\n        toast_text = '请填写投保人【年收入】'\n      } else if (!vm.warranty.appl_annual_source) {\n        toast_text = '请选择投保人【收入来源】'\n      } else if (vm.warranty.appl_annual_source === 15457 && !vm.applicant.annual_source_other) {\n        toast_text = '请填写投保人【收入来源】'\n      } else if (!vm.applicant.height) {\n        toast_text = '请填写投保人【身高】'\n      } else if (!vm.applicant.weight) {\n        toast_text = '请填写投保人【体重】'\n      } else if (!vm.warranty.is_assured) {\n        toast_text = '请选择投保人【是投保人的】'\n      } else if (!vm.warranty.appl_occupation_code) {\n        toast_text = '请选择投保人【职业】'\n      } else if (!vm.warranty.contract_handle) {\n        toast_text = '请选择【合同争议处理方式】'\n      } else if (vm.warranty.contract_handle === '109' && !vm.warranty.contract_handle_value) {\n        toast_text = '请填写【仲裁委员会】'\n      }\n      if (toast_text) {\n        console.info(toast_text)\n        this.$toast.open(toast_text, '')\n        return false\n      }\n      return true\n    },\n    next() {\n      if (!this.checkForm()) {\n        return false\n      }\n      this.$toast.close()\n\n      // 如果被保险人是本人\n      if (this.warranty.is_assured === 15000) {\n        var assured = Api.obj2json(this.applicant)\n        this.warranty.assu_card_type = this.warranty.appl_card_type\n        this.warranty.assu_nation = this.warranty.appl_nation\n        this.warranty.assu_annual_source = this.warranty.appl_annual_source\n        this.warranty.assu_occupation_code = this.warranty.appl_occupation_code\n        this.warranty.assu_tax_type = this.warranty.appl_tax_type\n        this.warranty.assu_sex = this.warranty.appl_sex\n        this.assured = Object.assign(this.assured, assured)\n        this.$store.dispatch('setApplicant', this.applicant)\n        this.$store.dispatch('setWarranty', this.warranty)\n\n        Api.queryID(this.applicant.document_number, 'assured', res => {\n          if (res && res.assu_id) {\n            this.assured.assu_id = res.assu_id\n          } else {\n            this.$delete(this.assured, 'assu_id')\n          }\n          this.$delete(this.assured, 'appl_id')\n          this.$store.dispatch('saveAssured', this.assured)\n          this.$router.push('/prospectus')\n        })\n      } else {\n        this.$store.commit('setApplicant', this.applicant)\n        this.$store.commit('setWarranty', this.warranty)\n        this.$router.push('/beinsured')\n      }\n    }\n  }\n}\n</script>\n<style>\ninput[type=\"date\"]:before,\ninput[type=\"month\"]:before {\n  color: #999;\n  content: attr(placeholder);\n}\n\ninput[type=\"date\"].has:before,\ninput[type=\"month\"].has:before {\n  content: \"\" !important;\n}\n\n.pd:before {\n  color: #999;\n  content: attr(placeholder);\n}\n\n.pd {\n  -webkit-user-select: none;\n}\n</style>\n",
			"file": "src/components/Insured.vue",
			"file_size": 27901,
			"file_write_time": 131432986380564852,
			"settings":
			{
				"buffer_size": 25775,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main.js",
			"settings":
			{
				"buffer_size": 3407,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/assets/css/app.scss",
			"settings":
			{
				"buffer_size": 6256,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/api/index.js",
			"settings":
			{
				"buffer_size": 6025,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/Java.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/Java.sublime-build",
					""
				],
				[
					"Packages/User/Java.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/Java.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 342.0,
		"last_filter": "Package Control: lp",
		"selected_items":
		[
			[
				"Package Control: lp",
				"Package Control: List Packages"
			],
			[
				"Package Control: rp",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ip",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"lp",
				"Package Control: List Packages"
			],
			[
				"Package Control: li",
				"Package Control: List Packages"
			],
			[
				"Snippet: p",
				"Snippet: Lorem ipsum"
			],
			[
				"insp",
				"Package Control: Install Package"
			],
			[
				"Package Control: rm",
				"Package Control: Remove Package"
			],
			[
				"markdown Pres",
				"Markdown Preview: Save to HTML"
			],
			[
				"bs3-c4",
				"Snippet: bs3-col-4"
			],
			[
				"bs3-col",
				"Snippet: bs3-col-8"
			],
			[
				"git",
				"git: status"
			],
			[
				"open s",
				"File: Open In Browser - Testing Server"
			],
			[
				"ip",
				"Package Control: Install Package"
			],
			[
				"Package Control: less",
				"Package Control: List Packages"
			],
			[
				"Package Control: css",
				"Package Control: List Packages"
			]
		],
		"width": 446.0
	},
	"console":
	{
		"height": 466.0,
		"history":
		[
			"exit()",
			"exit();",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/programs/vuejs/XT_ins",
		"/E/programs/vuejs/XT_ins/dist",
		"/E/programs/vuejs/XT_ins/src",
		"/E/programs/vuejs/XT_ins/src/api",
		"/E/programs/vuejs/XT_ins/src/assets",
		"/E/programs/vuejs/XT_ins/src/assets/css",
		"/E/programs/vuejs/XT_ins/src/components",
		"/E/programs/vuejs/XT_ins/src/router",
		"/E/programs/vuejs/XT_ins/src/store",
		"/E/programs/vuejs/XT_ins/src/widgets",
		"/E/programs/vuejs/XT_ins/src/widgets/components",
		"/E/programs/vuejs/XT_ins/src/widgets/preview",
		"/E/programs/vuejs/XT_ins/static"
	],
	"file_history":
	[
		"/E/programs/vuejs/XT_ins/dist/XT_ins2c.html",
		"/E/programs/vuejs/XT_ins/src/api/index.js",
		"/D/FED/Desktop/IDValidator.js",
		"/D/FED/Documents/WeChat Files/yejing6181/Files/新建文本文档 (2).txt",
		"/D/FED/Desktop/work.todo",
		"/E/programs/vuejs/XT_ins/src/main.js",
		"/E/programs/vuejs/XT_ins/src/components/Confirmation.vue",
		"/E/programs/vuejs/XT_ins/src/components/Region.vue",
		"/E/programs/vuejs/Main.vue",
		"/E/programs/vuejs/XT_ins/src/components/Preview.vue",
		"/E/programs/vuejs/XT_ins/src/components/Prospectus.vue",
		"/E/programs/vuejs/XT_ins/src/store/state.js",
		"/E/programs/vuejs/XT_ins/src/widgets/Local.js",
		"/E/programs/vuejs/XT_ins/src/router/index.js",
		"/E/programs/vuejs/XT_ins/src/App.vue",
		"/E/programs/vuejs/XT_ins/index.html",
		"/E/programs/vuejs/XT_ins/dist/XT_ins.html",
		"/E/programs/vuejs/XT_ins/src/components/Notice.vue",
		"/E/programs/vuejs/XT_ins/src/components/Insured.vue",
		"/E/programs/vuejs/XT_ins/src/components/Beinsured.vue",
		"/E/programs/vuejs/XT_ins/src/components/Beneficiary.vue",
		"/E/programs/vuejs/XT_ins/config/index.js",
		"/E/programs/vuejs/XT_ins/src/location.href",
		"/D/WWW/ReactApp/index.android.js",
		"/E/programs/vuejs/XT_ins/src/components/Beneficiaries.vue",
		"/E/programs/vuejs/XT_ins/src/store/mutations.js",
		"/E/programs/vuejs/XT_ins/src/components/Healthinfo.vue",
		"/E/programs/vuejs/XT_ins/src/assets/css/app.scss",
		"/E/programs/vuejs/XT_ins/src/components/Billinfo.vue",
		"/D/FED/Desktop/path.txt",
		"/E/programs/vuejs/XT_ins/src/components/Occupation.vue",
		"/D/phpStudy/Apache/module.ini",
		"/E/programs/vuejs/XT_ins/src/widgets/index.js",
		"/E/programs/vuejs/XT_ins/src/widgets/components/Dropdown.vue",
		"/E/programs/vuejs/XT_ins/src/components/Success.vue",
		"/E/svn/shop/data/config.php",
		"/E/programs/vuejs/XT_ins/src/store/actions.js",
		"/E/programs/vuejs/XT_ins/src/assets/css/app-iconfont.scss",
		"/D/FED/Desktop/test.php",
		"/D/WWW/test.php",
		"/D/WWW/phpinfo.php",
		"/D/phpStudy/tmp/tmp/sess_vov06j7s7c9q9qrf4su1jhkr25",
		"/D/phpStudy/tmp/tmp/sess_cfcq3amis85d1mu5m4hqe20ol5",
		"/D/phpStudy/php55n/php.ini",
		"/E/programs/vuejs/XT_ins/src/components/Region.vue.bak",
		"/E/programs/vuejs/insurance/src/components/Region.vue",
		"/D/FED/Pictures/Screenshots/屏幕截图(3).png",
		"/E/programs/vuejs/insurance/src/views/Insured.vue",
		"/E/programs/vuejs/XT_ins/dist/static/js/vendor.5c1d54cbccdbe88761c5.js",
		"/D/Program Files/sublime text 3/Data/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc",
		"/E/programs/vuejs/XT_ins/dist/static/js/app.c5d8ee45500199c455cf.js",
		"/E/programs/vuejs/XT_ins/src/widgets/Dialog.js",
		"/E/programs/vuejs/XT_ins/src/widgets/components/Input.vue",
		"/E/programs/vuejs/XT_ins/src/widgets/mint-picker/mint-picker.css",
		"/E/programs/vuejs/XT_ins/src/widgets/mint-picker/picker-slot.vue",
		"/E/programs/vuejs/XT_ins/src/widgets/mint-picker/picker.css",
		"/E/programs/vuejs/XT_ins/src/widgets/components/Alert.vue",
		"/E/programs/vuejs/XT_ins/src/widgets/Alert.js",
		"/E/programs/vuejs/insurance/src/plugins.js",
		"/E/programs/vuejs/XT_ins/src/widgets/Storage.js",
		"/E/programs/vuejs/XT_ins/src/store/index.js",
		"/E/programs/vuejs/XT_insBak/0227/src/widgets/index.js",
		"/E/programs/vuejs/XT_ins/package.json",
		"/E/programs/vuejs/XT_ins/src/widgets/components/Dialog.vue",
		"/E/programs/vuejs/XT_ins/src/widgets/Toast.js",
		"/E/programs/vuejs/XT_ins/src/components/Alert.vue",
		"/E/programs/vuejs/XT_ins/.eslintrc.js",
		"/E/programs/vuejs/XT_ins/src/assets/css/picker.scss",
		"/E/programs/vuejs/XT_ins/dist/server.bat",
		"/E/programs/vuejs/XT_ins/dist/static/css/app.5bb8722671fc74b06b92391955429ec8.css",
		"/E/programs/vuejs/XT_ins/src/widgets/IDValidator.js",
		"/E/programs/vuejs/XT_ins/src/widgets/preview/preview.vue",
		"/E/programs/vuejs/XT_ins/node_modules/vue-preview/src/plugins/preview/index.js",
		"/E/programs/vuejs/XT_ins/build/utils.js",
		"/E/programs/vuejs/XT_ins/build/webpack.prod.conf.js",
		"/E/programs/vuejs/XT_ins/build/webpack.base.conf.js",
		"/E/programs/vuejs/XT_ins/src/widgets/preview.js",
		"/D/FED/Desktop/sss",
		"/D/Program Files/sublime text 3/Data/Packages/Babel/Babel.sublime-settings",
		"/E/programs/vuejs/XT_ins/java/Encryptionutil.java",
		"/E/programs/vuejs/XT_ins/src/test.js",
		"/D/Program Files/sublime text 3/Data/Packages/User/Java.sublime-build",
		"/E/programs/vuejs/XT_ins/java/Hello.java",
		"/E/programs/vuejs/XT_ins/java/SHA.java",
		"/D/Program Files/sublime text 3/Data/Packages/Javatar/Default (Windows).sublime-keymap",
		"/E/programs/vuejs/XT_ins/java/DigestUtils.java",
		"/D/Program Files/sublime text 3/Data/Packages/User/Javatar.sublime-settings",
		"/D/Program Files/sublime text 3/Data/Packages/Javatar/Javatar.sublime-settings",
		"/D/Program Files/sublime text 3/Data/Packages/Javatar/Developers/Proto.javatar-packages",
		"/D/Program Files/sublime text 3/Data/Packages/Javatar/README.md",
		"/E/programs/vuejs/XT_ins/java/main.java",
		"/E/programs/vuejs/XT_ins/src/components/Occupation-bak.vue",
		"/E/programs/vuejs/XT_ins/src/components/Picker.vue",
		"/E/programs/vuejs/XT_ins/src/components/Tips.vue",
		"/E/programs/vuejs/XT_ins/node_modules/axios/lib/axios.js",
		"/E/programs/vuejs/XT_ins/node_modules/axios/dist/axios.js",
		"/E/programs/vuejs/XT_ins/dist/static/js/manifest.fd7fbae173333f0c59d5.js",
		"/E/programs/vuejs/XT_ins/dist/static/js/app.aaaf8ae79edf99d463d2.js",
		"/E/GitHub/mint-ui/packages/picker/src/picker.vue",
		"/E/GitHub/mint-ui/packages/picker/src/picker-slot.vue",
		"/E/programs/vuejs/XT_ins/node_modules/mint-picker/lib/index.js",
		"/E/programs/vuejs/XT_ins/src/components/Healthinfo - 副本.vue",
		"/D/Program Files/sublime text 3/Data/Packages/User/JavaScript-Completions.sublime-settings",
		"/E/programs/vuejs/XT_ins/node_modules/vue-preview/src/plugins/preview/preview.vue",
		"/E/programs/vuejs/XT_ins/dist/index.html",
		"/E/programs/vuejs/XT_insBak/index.html",
		"/E/programs/vuejs/ZTMobi/src/store/mutations.js",
		"/E/programs/vuejs/ZTMobi/src/api/index.js",
		"/E/programs/vuejs/ZTMobi/src/store/state.js",
		"/E/programs/vuejs/ZTMobi/src/assets/css/app.scss",
		"/E/programs/vuejs/ZTMobi/src/components/City.vue",
		"/E/programs/vuejs/ZTMobi/src/widgets/Toast.js",
		"/E/programs/vuejs/ZTMobi/src/components/Home.vue",
		"/E/programs/vuejs/ZTMobi/src/components/CarInfo.vue",
		"/E/programs/vuejs/ZTMobi/src/components/Quotes.vue",
		"/E/programs/vuejs/ZTMobi/src/components/Insurance.vue",
		"/E/programs/vuejs/ZTMobi/src/components/Order.vue",
		"/E/programs/vuejs/ZTMobi/package.json",
		"/E/programs/vuejs/ZTMobi/src/components/Region.vue",
		"/E/programs/vuejs/ZTMobi/src/widgets/Components.js",
		"/E/programs/vuejs/ZTMobi/src/main.js",
		"/E/programs/vuejs/ZTMobi/src/widgets/Dialog.js",
		"/E/programs/vuejs/ZTMobi/dist/ZTmobi.html",
		"/E/programs/hmhome/Theme/index/home/XT_ins.html",
		"/E/programs/hmhome/Theme/index/home/AddUserEdit.html",
		"/E/programs/hmhome/Theme/index/home/ZT_pay.html",
		"/E/programs/hmhome/Theme/index/home/test.html",
		"/E/programs/hmhome/test.html"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 108.0,
		"where_history":
		[
			"E:\\programs\\vuejs\\XT_ins\\src",
			"E:\\programs\\vuejs\\XT_ins\\src\\components",
			"E:\\programs\\vuejs\\XT_ins\\src",
			"E:\\programs\\vuejs\\XT_ins\\src\\components",
			"E:\\programs\\vuejs\\XT_ins",
			"E:\\programs\\vuejs\\XT_ins\\src",
			"E:\\programs\\vuejs\\XT_ins\\src\\components",
			"E:\\programs\\vuejs\\XT_ins\\src",
			"E:\\programs\\vuejs\\XT_ins\\src\\components",
			"E:\\programs\\vuejs\\XT_ins\\src",
			"E:\\programs\\vuejs\\XT_ins\\src\\components",
			"E:\\programs\\vuejs\\XT_ins\\src",
			"E:\\programs\\vuejs\\XT_ins\\src\\components",
			"E:\\programs\\vuejs\\XT_ins\\dist\\static\\js",
			"E:\\programs\\vuejs\\XT_ins\\src\\components",
			"E:\\programs\\vuejs\\XT_ins\\src",
			"E:\\programs\\vuejs\\XT_ins\\src\\components",
			"E:\\programs\\vuejs\\XT_ins\\node_modules\\axios",
			"E:\\programs\\vuejs\\XT_ins\\src\\components",
			"E:\\programs\\vuejs\\XT_ins,-node_modules",
			"E:\\programs\\vuejs\\XT_ins\\src",
			"E:\\programs\\vuejs\\XT_ins\\src\\components",
			"E:\\programs\\vuejs\\XT_ins\\src",
			"E:\\programs\\vuejs\\XT_ins\\src\\components",
			"E:\\programs\\vuejs\\ZTMobi\\src\\components",
			"E:\\programs\\hmhome\\Theme\\index\\home",
			"E:\\programs\\hmhome\\Theme\\index\\home,",
			"E:\\programs\\hmhome\\Theme\\index\\home,-E:\\programs\\hmhome\\Theme\\index\\home\\bak",
			"E:\\programs\\hmhome\\Theme\\index\\home",
			"E:\\hmhome\\Theme\\index\\home",
			"E:\\huimeng\\Theme\\Base",
			"E:\\huimeng\\Theme\\Index",
			"E:\\huimeng\\Bin\\Index\\View\\Index",
			"E:\\huimeng\\Bin\\Runtime\\Cache\\Index",
			"E:\\huimeng\\Bin\\Index\\View\\Index",
			"E:\\hmhome\\Bin\\Index\\View\\Index",
			"E:\\hmhome\\Bin\\Index\\View",
			"E:\\hmhome\\Bin\\Index\\View\\Index",
			"E:\\hmhome",
			"D:\\github\\phpspider",
			"E:\\FE\\src\\zsj_business",
			"E:\\WWW\\cms",
			"D:\\Yeah\\Desktop\\0321\\手机",
			"D:\\Yeah\\Desktop\\0321"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"checkID",
			"IDValidate",
			"appl_tax_type",
			"age",
			"appl_tax_type",
			"applicant",
			"age",
			"assu_occupation_code",
			"age",
			"vm",
			"check",
			"age",
			"template",
			"assu_tax_type",
			"appl_tax_type",
			"annual_source",
			"appl_tax_type",
			"occupation_code",
			"tax_type",
			"checkForm",
			"assu_tax_type",
			"'\n",
			"v-bind",
			"assu_social_security",
			"document_number",
			"IDValidate",
			"upper",
			"document_type",
			"58",
			"appl_nation",
			"assu_nation",
			"nationality",
			"assu_nation",
			"nationality",
			"appl_nation",
			"annual_source_other",
			"applicant_",
			"appl_id",
			"assu_id",
			"IDValidate",
			"app-form",
			"assChanged",
			"mask",
			"app-mask",
			"benefited_type",
			"appl_card_type",
			"sex",
			"assured.sex",
			"assured_sex",
			"social_security",
			"al_security",
			"assu_occupation_code",
			"occupation_code",
			"annual_source",
			"nationality",
			"assu_nation",
			"document_type",
			"sex",
			"appl_nation",
			"nationality",
			"nation",
			"appl_type",
			"register",
			"annual_source",
			"assured_annual_source",
			"occupation_code",
			" data() {",
			"data",
			"applicant",
			"appl_id",
			"IDValidate",
			"checkExtraAge",
			"146",
			"checkMainFee",
			"74",
			"checkMainMoney",
			"photoswipe",
			"vm",
			"age",
			"this",
			"setInfo",
			"age",
			"22",
			"location.href",
			"this",
			"$_GET",
			"get",
			"checkIDExist",
			"typeChange",
			"assured",
			"warranty.appl_card_type",
			"warranty.appl_card_type ",
			"register",
			"applicant_occupation_code",
			"visit_tel",
			"beneficiary.nationality",
			"assured.nationality",
			"appl_nation",
			"nation",
			"applicant.name",
			"document_type",
			"nationality",
			"this.",
			"appl_",
			"appl_nation",
			"assu_",
			"assu_annual_source",
			"assu_nationality",
			"assu_sex",
			"assu_card_type",
			"appl_card_type",
			"assu_card_type",
			"15009",
			"list",
			"app-list",
			"rels[vm.warranty.is_assured]",
			"relationship",
			"15",
			"sex",
			"beneficiary_sex",
			"assured_war_id",
			"assured_assured_war_id",
			"social_security",
			"assured",
			"social_security",
			" = []",
			"code",
			"register"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"appl_occupation_code",
			"appl",
			"15457",
			"warranty.assu_card_type",
			"warranty.appl_annual_source",
			"warranty.assu_nation",
			"warranty.appl_sex",
			"warranty.appl_card_type",
			"warranty.appl_nation",
			"warranty.appl_sex",
			"warranty.appl_card_type",
			"if_id",
			"'",
			"===",
			"99",
			"服务器开小差了",
			"Api.obj2json",
			"bs_id",
			".indexOf('Error') > -1",
			"被保人",
			"$",
			"var baseUrl = \"http://cloud.ehuimeng.com\"",
			"http://cloud.ehuimeng.com",
			"",
			"h2",
			"\"/Theme/index/home/js",
			"\"/Theme/index/home/css",
			"女士",
			"../../public",
			"保险,保险代理,汇盟,汇盟保代,深圳汇盟保险代理有限公司",
			"file=\"./Theme",
			"file=\"/Theme",
			"{:U('/",
			"合作渠道",
			"代理保险",
			"{:U('agent')}",
			"{:U('qualification')}",
			"{:U('sitemap')}",
			"{:U('service')}",
			"{:U('CooperationChannels')}",
			"{:U('cooperationchannels')}",
			"{:U('recruitment')}",
			"{:U('companynews')}",
			"{:U('industrynews')}",
			"=\"{:U('industrynews')}\"",
			"=\"{:U('cooperation')}\"",
			"=\"{:U('industry')}\"",
			"=\"{:U('contact')}\"",
			"=\"{:U('index')}\"",
			"=\"={:U('index')}\"",
			"{:U('index')}",
			"{:U('institutions')}",
			"{:U('advantage')}",
			"{:U('employee')}",
			"{:U('philosophy')}",
			"{:U('orientation')}",
			"{:U('company')}",
			"{:U('mdrt')}",
			"{:U('ida')}",
			"{:U('studio')}",
			"{:U('founder')}",
			"{:U('member')}",
			"{:U('kings')}",
			"{:U('stars')}",
			"{:U('honor')}",
			"\"__PUBLIC__/index/images/",
			"<include file=\"./Bin/Index/View/Index/include/footer.html\" />",
			"<include file=\"./Bin/Index/View/Index/include/header.html\" />",
			"<include file=\"./Bin/Index/View/Index/include/meta.html\" />",
			"\"__PUBLIC__/index/images/",
			"\"__PUBLIC__/index/",
			"<include file=\"./Bin/Index/View/Index/include/side.html\" />",
			"<include file=\"./Bin/Index/View/Index/include/footer.html\" />",
			"<include file=\"./Bin/Index/View/Index/include/header.html\" />",
			"<include file=\"./Bin/Index/View/Index/include/meta.html\" />",
			"<include file=\"./Bin/Index/View/Index/include/footer.html\" />",
			"<include file=\"./Bin/Index/View/Index/include/header.html\" />",
			"<include file=\"./Bin/Index/View/Index/include/meta.html\" />",
			"__PUBLIC__/index/images/",
			"<include file=\"./Bin/Index/View/Index/include/footer.html\" />",
			"<include file=\"./Bin/Index/View/Index/include/header.html\" />",
			"<include file=\"./Bin/Index/View/Index/include/meta.html\" />",
			"<span class=\"number\"></span>",
			"<span class=\"yuan\">元</span>",
			"<span class=\"number\"></span>",
			"<span class=\"number\"></span>\n<span class=\"yuan\">元</span>",
			"\"/Theme/index/home/images/plans/",
			"/template/default",
			"\"/assets",
			":",
			"newoptions",
			"crtId",
			"第28届世界模特小姐大赛",
			"&quot;",
			"&gt;",
			"&lt;",
			"hrmenu",
			"max-width: 1000px;",
			"include/",
			".html",
			"setTableName('xiao_model_field',true)",
			"setTableName('xiao_model',true)",
			"setTableName('xiao_admin',true)",
			"en_",
			".register",
			"慧联通信",
			"\"/web/images/",
			"\"/web/css/",
			"\"/web/images/",
			"\"/web/js/",
			"\"/web_pc/js/",
			"(/web_pc/images/",
			"\"/web_pc/images/"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/components/Beinsured.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21962,
						"regions":
						{
						},
						"selection":
						[
							[
								19478,
								19478
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										19511,
										19512
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										19356,
										19357
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"history_list_is_closing": true,
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Vue Syntax Highlight/vue.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10291.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/components/Prospectus.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12425,
						"regions":
						{
						},
						"selection":
						[
							[
								3297,
								3317
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Vue Syntax Highlight/vue.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 922.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/components/Notice.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3285,
						"regions":
						{
						},
						"selection":
						[
							[
								2847,
								2852
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2857,
										2858
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2828,
										2829
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Vue Syntax Highlight/vue.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1201.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/components/Preview.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31514,
						"regions":
						{
						},
						"selection":
						[
							[
								11799,
								11799
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Vue Syntax Highlight/vue.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4266.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "dist/XT_ins2c.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1438,
						"regions":
						{
						},
						"selection":
						[
							[
								1438,
								1438
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1433,
										1437
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/tag.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										16,
										20
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/components/Healthinfo.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15248,
						"regions":
						{
						},
						"selection":
						[
							[
								3666,
								3666
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Vue Syntax Highlight/vue.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 788.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/widgets/Storage.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 492,
						"regions":
						{
						},
						"selection":
						[
							[
								289,
								289
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										298,
										299
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										288,
										289
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "ASCII",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/components/Occupation.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6492,
						"regions":
						{
						},
						"selection":
						[
							[
								2202,
								2202
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Vue Syntax Highlight/vue.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 769.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/components/Beneficiary.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20179,
						"regions":
						{
						},
						"selection":
						[
							[
								15449,
								15449
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										15502,
										15503
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										15448,
										15449
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Vue Syntax Highlight/vue.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7231.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 9,
					"file": "src/components/Insured.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25775,
						"regions":
						{
						},
						"selection":
						[
							[
								1193,
								1193
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Vue Syntax Highlight/vue.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3407,
						"regions":
						{
						},
						"selection":
						[
							[
								1965,
								1965
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1970,
										1971
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1619,
										1620
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1080.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/assets/css/app.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6256,
						"regions":
						{
						},
						"selection":
						[
							[
								1881,
								1881
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1967,
										1968
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1880,
										1881
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Sass/Syntaxes/Sass.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/api/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6025,
						"regions":
						{
						},
						"selection":
						[
							[
								114,
								114
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"sftp_duplicate_views": 0,
							"synced": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 68.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.523581899298,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.GitSavvy":
	{
		"height": 100.0
	},
	"output.clipboard_manager":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 300.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.gulp_output":
	{
		"height": 87.0
	},
	"output.sftp":
	{
		"height": 433.0
	},
	"pinned_build_system": "Packages/User/Node.sublime-build",
	"project": "XT_ins.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"coponent/i",
				"src\\components\\Insured.vue"
			],
			[
				"hea",
				"src\\components\\Healthinfo.vue"
			],
			[
				"bene",
				"src\\components\\Beneficiary.vue"
			],
			[
				"pre",
				"src\\components\\Preview.vue"
			],
			[
				"bill",
				"src\\components\\Billinfo.vue"
			],
			[
				"mutai",
				"src\\store\\mutations.js"
			],
			[
				"prospectus",
				"src\\components\\Prospectus.vue"
			],
			[
				"icon",
				"src\\assets\\css\\app-iconfont.scss"
			],
			[
				"dropdown",
				"src\\widgets\\components\\Dropdown.vue"
			],
			[
				"widget",
				"src\\widgets\\index.js"
			],
			[
				"router/in",
				"src\\router\\index.js"
			],
			[
				"heal",
				"src\\components\\Healthinfo.vue"
			],
			[
				"widget/index",
				"src\\widgets\\index.js"
			],
			[
				"toast.",
				"src\\widgets\\Toast.js"
			],
			[
				"insur",
				"src\\components\\Insured.vue"
			],
			[
				"bein",
				"src\\components\\Beinsured.vue"
			],
			[
				"pros",
				"src\\components\\Prospectus.vue"
			],
			[
				"prev",
				"src\\components\\Preview.vue"
			],
			[
				"succ",
				"src\\components\\Success.vue"
			],
			[
				"dropd",
				"src\\widgets\\Dropdown.vue"
			],
			[
				"regio",
				"src\\components\\Region.vue"
			],
			[
				"occ",
				"src\\components\\Occupation.vue"
			],
			[
				"benefi",
				"src\\components\\Beneficiary.vue"
			],
			[
				"api/in",
				"src\\api\\index.js"
			],
			[
				"vue-pre",
				"node_modules\\vue-preview\\src\\plugins\\preview\\index.js"
			],
			[
				"mt-picker",
				"node_modules\\mint-picker\\lib\\index.js"
			],
			[
				"succs",
				"src\\components\\Success.vue"
			],
			[
				"health",
				"src\\components\\Healthinfo.vue"
			],
			[
				"axios",
				"node_modules\\axios\\lib\\axios.js"
			],
			[
				"vue-previewindex",
				"node_modules\\vue-preview\\src\\plugins\\preview\\index.js"
			],
			[
				"vue-previewindex.js",
				"node_modules\\vue-preview\\src\\plugins\\preview\\index.js"
			],
			[
				"hmdd",
				"Bin\\Home\\Controller\\HmddController.class.php"
			],
			[
				"h",
				"Bin\\Home\\Controller\\HmddController.class.php"
			],
			[
				"pasture",
				"Theme\\index\\home\\XT_bwrs_pasture_prospectus.html"
			],
			[
				"xt_bw",
				"Theme\\index\\home\\XT_bwrs_pasture_prospectus.html"
			],
			[
				"xry",
				"Theme\\index\\home\\GY_xry_pasture_prospectus.html"
			],
			[
				"prospectus.js",
				"Theme\\index\\home\\weui\\prospectus.js"
			],
			[
				"home/css",
				"hmhome\\Theme\\index\\home\\css\\common.css"
			],
			[
				"common.js",
				"hmhome\\Theme\\index\\home\\js\\common.js"
			],
			[
				"",
				"hmhome\\Bin\\Index\\View\\Index\\recruitment.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"D:\\leo\\web\\web.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 351.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
